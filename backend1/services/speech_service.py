import speech_recognition
import time
from config import Config

class SpeechService:
    def __init__(self):
        self.recognizer = speech_recognition.Recognizer()
        self.recognizer.energy_threshold = Config.ENERGY_THRESHOLD
        self.recognizer.dynamic_energy_threshold = Config.DYNAMIC_ENERGY_THRESHOLD
    
    def listen_and_recognize(self):
        """L·∫Øng nghe v√† nh·∫≠n di·ªán gi·ªçng n√≥i"""
        with speech_recognition.Microphone() as mic:
            print("üé§ Chatbot: T√¥i ƒëang l·∫Øng nghe...")
            self.recognizer.adjust_for_ambient_noise(mic, duration=Config.AMBIENT_NOISE_DURATION)
            
            try:
                audio = self.recognizer.listen(
                    mic, 
                    timeout=Config.AUDIO_TIMEOUT, 
                    phrase_time_limit=Config.PHRASE_TIME_LIMIT
                )
            except speech_recognition.WaitTimeoutError:
                print("‚è∞ Timeout - kh√¥ng nghe th·∫•y g√¨")
                return None, None
        
        # Nh·∫≠n di·ªán gi·ªçng n√≥i
        text = ""
        detected_lang = 'vi'
        
        try:
            # Th·ª≠ nh·∫≠n di·ªán ti·∫øng Vi·ªát tr∆∞·ªõc
            text = self.recognizer.recognize_google(audio, language="vi-VN")
            detected_lang = 'vi'
            print(f"üáªüá≥ Nh·∫≠n di·ªán ti·∫øng Vi·ªát: {text}")
        except:
            try:
                # N·∫øu kh√¥ng ƒë∆∞·ª£c, th·ª≠ ti·∫øng Anh
                text = self.recognizer.recognize_google(audio, language="en-US")
                detected_lang = 'en'
                print(f"üá∫üá∏ Nh·∫≠n di·ªán ti·∫øng Anh: {text}")
            except:
                print("‚ùå Kh√¥ng th·ªÉ nh·∫≠n di·ªán gi·ªçng n√≥i")
                return None, None
        
        return text, detected_lang